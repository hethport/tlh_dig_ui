type Query {
  allManuscripts: [ManuscriptMetaData!]!
  manuscript(mainIdentifier: String!): ManuscriptMetaData
}

type ManuscriptMetaData {
  mainIdentifier: ManuscriptIdentifier!
  provenance: String
  cthClassification: Int
  bibliography: String
  creatorUsername: String!
  palaeographicClassification: PalaeographicClassification!
  palaeographicClassificationSure: Boolean!
  status: ManuscriptStatus
  otherIdentifiers: [ManuscriptIdentifier!]!
  pictureUrls: [String!]!
}

type ManuscriptIdentifier {
  type: ManuscriptIdentifierType!
  identifier: String!
}

enum ManuscriptIdentifierType {
  ExcavationNumber
  CollectionNumber
  PublicationShortReference
}

enum PalaeographicClassification {
  OldScript
  MiddleScript
  NewScript
  LateNewScript
  OldAssyrianScript
  MiddleAssyrianScript
  MiddleBabylonianScript
  AssyroMittanianScript
  Unclassified
}

enum ManuscriptStatus {
  InCreation
  Created
  Reviewed
  ReviewMerged
  ExecutiveReviewed
  ExecutiveReviewMerged
  Approved
}

type Mutation {
  register(userInput: UserInput!): String
  login(username: String!, password: String!): LoggedInUser
  me(jwt: String!): LoggedInUserMutations
}

input UserInput {
  username: String!
  password: String!
  passwordRepeat: String!
  name: String!
  affiliation: String
  email: String!
}

type LoggedInUser {
  username: String!
  name: String!
  affiliation: String
  jwt: String!
}

type LoggedInUserMutations {
  createManuscript(values: ManuscriptMetaDataInput): String
  manuscript(mainIdentifier: String): ManuscriptMutations
}

input ManuscriptMetaDataInput {
  mainIdentifier: ManuscriptIdentifierInput!
  otherIdentifiers: [ManuscriptIdentifierInput!]!
  palaeographicClassification: PalaeographicClassification!
  palaeographicClassificationSure: Boolean!
  provenance: String
  cthClassification: Int
  bibliography: String
}

input ManuscriptIdentifierInput {
  identifierType: ManuscriptIdentifierType!
  identifier: String!
}

type ManuscriptMutations {
  updateTransliteration(values: [TransliterationTextLineInput!]!): String
}

input TransliterationTextLineInput {
  lineNumber: Int!
  isAbsolute: Boolean!
  content: [TransliterationTextLineContentUnion!]!
}

input TransliterationTextLineContentUnion {
  stringContent: StringContentInput
  damageContent: DamageInput
  correctionContent: CorrectionType
}

input StringContentInput {
  type: StringContentTypeEnum!
  content: String!
}

enum StringContentTypeEnum {
  Akadogramm
  Determinativ
  MaterLectionis
  Sumerogramm
}

input DamageInput {
  type: DamageTypeEnum!
  position: DamagePositionEnum!
}

enum DamageTypeEnum {
  Deletion
  Lesion
  Rasure
  Surplus
  Supplement
  UnknownDamage
}

enum DamagePositionEnum {
  Start
  End
}

enum CorrectionType {
  UnsureCorrection
  MaybeUnsureCorrection
  SureCorrection
  SicCorrection
  Ellipsis
  ParagraphEnd
}

enum ManuscriptSide {
  Front
  Back
  LeftEdge
  RightEdge
  UpperEdge
  LowerEdge
}
